{
	"artifacts" : 
	[
		{
			"path" : "SafeConnect VPN/CMakeTarget.exe"
		},
		{
			"path" : "SafeConnect VPN/CMakeTarget.pdb"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"set_property"
		],
		"files" : 
		[
			"SafeConnect VPN/CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 9,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "/DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Ob0 /Od /RTC1 -std:c++20 -ZI"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					2
				],
				"standard" : "20"
			},
			"sourceIndexes" : 
			[
				0
			]
		},
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "/DWIN32 /D_WINDOWS /W3 /MDd /Ob0 /Od /RTC1 -ZI"
				}
			],
			"language" : "C",
			"sourceIndexes" : 
			[
				2,
				3,
				5,
				7,
				9,
				11,
				13
			]
		}
	],
	"id" : "CMakeTarget::@3a304193f66c45b04153",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "/DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Ob0 /Od /RTC1 -ZI",
				"role" : "flags"
			},
			{
				"fragment" : "/machine:x64 /debug /INCREMENTAL /subsystem:console",
				"role" : "flags"
			},
			{
				"fragment" : "kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "CMakeTarget",
	"nameOnDisk" : "CMakeTarget.exe",
	"paths" : 
	{
		"build" : "SafeConnect VPN",
		"source" : "SafeConnect VPN"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				2,
				3,
				5,
				7,
				9,
				11,
				13
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				1,
				4,
				6,
				8,
				10,
				12,
				14
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "SafeConnect VPN/SafeConnect VPN.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/SafeConnect VPN.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/main.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/vpn_manager.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/vpn_manager.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/traffic-analysis/traffic_analyzer.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/traffic-analysis/traffic_analyzer.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/traffic-analysis/monitoring/monitoring.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/traffic-analysis/monitoring/monitoring.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/websocket/websocket_manager.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/websocket/websocket_manager.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/utils/logger.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/utils/logger.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/utils/config_manager.c",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "SafeConnect VPN/src/vpn-server/utils/config_manager.h",
			"sourceGroupIndex" : 1
		}
	],
	"type" : "EXECUTABLE"
}
